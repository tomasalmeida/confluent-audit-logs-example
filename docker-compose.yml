---
version: "3.5"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${TAG}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ${PWD}/jaas/zookeeper.config:/etc/zookeeper/secrets/zookeeper-server-jaas.config
    environment:
        KAFKA_JMX_HOSTNAME: zookeeper
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_INIT_LIMIT: 10 # total init limit (INIT_LIMIT * TICK_TIME)
        ZOOKEEPER_SYNC_LIMIT: 4 # total sync limit  (SYNC_LIMIT * TICK_TIME)
        ZOOKEEPER_SERVER_ID: 1
        KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
          -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper-server-jaas.config
          -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
          -Dzookeeper.allowSaslFailedClients=false
          -Dzookeeper.requireClientAuthScheme=sasl

  broker:
    image:  confluentinc/cp-server:${TAG}
    hostname: broker
    container_name: broker
    ports:
      - "19092:19092"
    volumes:
      - ${PWD}/jaas/broker.config:/etc/kafka/secrets/kafka-client-jaas.config
    environment:
      KAFKA_BROKER_ID: 101
      # listeners
      KAFKA_LISTENERS: DOCKER://:9092,BROKER://:9093,HOST://:19092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker:9092,BROKER://broker:9093,HOST://localhost:19092
      # jmx
      KAFKA_JMX_HOSTNAME: broker
      KAFKA_JMX_PORT: 10091
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker" \
        password="broker-secret" \
        user_broker="broker-secret";
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:SASL_PLAINTEXT,BROKER:SASL_PLAINTEXT,HOST:SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      # listener host
      KAFKA_LISTENER_NAME_HOST_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_HOST_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        user_hostclient="hostclient-secret";
      # metrics security
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="controlcenter" \
        password="controlcenter-secret";
      # security listener docker
      KAFKA_LISTENER_NAME_DOCKER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_DOCKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        user_schemaregistry="schemaregistry-secret" \
        user_controlcenter="controlcenter-secret";
      # security listener interbroker
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      # metrics
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker:9092"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      # interesting features
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_TIER_METADATA_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT.SECURITY.EVENT.LOGGER.EXPORTER.KAFKA.TOPIC.REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # confluent audit logs
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      # security zookeeper
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka-client-jaas.config

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:${TAG}
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8080:8080"
  #     - "8081:8081"
  #   networks:
  #     - confluent
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:9092,kafka-2:9092,kafka-3:9092"
  #     # JMX
  #     SCHEMA_REGISTRY_JMX_HOSTNAME: schema-registry
  #     SCHEMA_REGISTRY_JMX_PORT: 8080
  #     # security
  #     SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
  #     # Configure SASL_SSL if SSL encryption is enabled, otherwise configure SASL_PLAINTEXT
  #     SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
  #     SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
  #         username="schemaregistry" \
  #         password="schemaregistry-secret";

  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:${TAG}
  #   hostname: control-center
  #   container_name: control-center
  #   depends_on:
  #     - broker
  #     - schema-registry
  #   ports:
  #     - "9021:9021"
  #   networks:
  #     - confluent
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:9092,kafka-2:9092,kafka-3:9092
  #     CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 4
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
  #     CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     CONFLUENT_METRICS_TOPIC_REPLICATION: 1
  #     CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: "false"
  #     CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
  #     CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
  #     # security
  #     CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN
  #     # Configure SASL_SSL if SSL encryption is enabled; otherwise configure SASL_PLAINTEXT
  #     CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
  #     CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
  #       username="controlcenter" \
  #       password="controlcenter-secret";

